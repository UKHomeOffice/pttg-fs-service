eyJhbGciOiJIUzI1NiJ9.cGlwZWxpbmU6CgogIGJ1aWxkOgogICAgcHJpdmlsZWdlZDogdHJ1ZQogICAgaW1hZ2U6IHF1YXkuaW8vdWtob21lb2ZmaWNlZGlnaXRhbC9vcGVuamRrODp2MS4xLjAKICAgIGVudmlyb25tZW50OgogICAgICAtIERPQ0tFUl9IT1NUPXRjcDovLzEyNy4wLjAuMToyMzc1CiAgICBjb21tYW5kczoKICAgICAgLSAuL2dyYWRsZXcgYnVpbGQKICAgIHdoZW46CiAgICAgZXZlbnQ6IFtwdXNoLCBwdWxsX3JlcXVlc3QsIHRhZ10KICAKICBkb2NrZXItYnVpbGQ6CiAgICBwcml2aWxlZ2VkOiB0cnVlCiAgICBpbWFnZTogZG9ja2VyOjEuMTEKICAgIGVudmlyb25tZW50OgogICAgICAtIERPQ0tFUl9IT1NUPXRjcDovLzEyNy4wLjAuMToyMzc1CiAgICBjb21tYW5kczoKICAgICAgLSBkb2NrZXIgYnVpbGQgLXQgcHR0Zy1mcy1zZXJ2aWNlIC4KICAgIHdoZW46CiAgICAgIGJyYW5jaDogW21hc3RlciwgcmVmcy90YWdzLypdCiAgICAgIGV2ZW50OiBbcHVzaCwgdGFnXQoKICB0YWctbGF0ZXN0LWRvY2tlci1pbWFnZToKICAgIGltYWdlOiBkb2NrZXI6MS4xMQogICAgZW52aXJvbm1lbnQ6CiAgICAgIC0gRE9DS0VSX0hPU1Q9dGNwOi8vMTI3LjAuMC4xOjIzNzUKICAgIGNvbW1hbmRzOgogICAgICAtIGRvY2tlciBsb2dpbiAtdT1wdHRnLWZzLXJvYm90IC1wPSR7RE9DS0VSX1BBU1NXT1JEfSBkb2NrZXIuZGlnaXRhbC5ob21lb2ZmaWNlLmdvdi51awogICAgICAtIGRvY2tlciB0YWcgcHR0Zy1mcy1zZXJ2aWNlIGRvY2tlci5kaWdpdGFsLmhvbWVvZmZpY2UuZ292LnVrL3B0dGcvcHR0Zy1mcy1zZXJ2aWNlOmxhdGVzdAogICAgICAtIGRvY2tlciB0YWcgcHR0Zy1mcy1zZXJ2aWNlIGRvY2tlci5kaWdpdGFsLmhvbWVvZmZpY2UuZ292LnVrL3B0dGcvcHR0Zy1mcy1zZXJ2aWNlOmJ1aWxkLSR7RFJPTkVfQlVJTERfTlVNQkVSfQogICAgICAtIGRvY2tlciBwdXNoIGRvY2tlci5kaWdpdGFsLmhvbWVvZmZpY2UuZ292LnVrL3B0dGcvcHR0Zy1mcy1zZXJ2aWNlOmxhdGVzdAogICAgICAtIGRvY2tlciBwdXNoIGRvY2tlci5kaWdpdGFsLmhvbWVvZmZpY2UuZ292LnVrL3B0dGcvcHR0Zy1mcy1zZXJ2aWNlOmJ1aWxkLSR7RFJPTkVfQlVJTERfTlVNQkVSfQogICAgd2hlbjoKICAgICAgYnJhbmNoOiBtYXN0ZXIKICAgICAgZXZlbnQ6IHB1c2gKCiAgdGFnLWRvY2tlci1pbWFnZS13aXRoLWdpdC10YWc6CiAgICBpbWFnZTogZG9ja2VyOjEuMTEKICAgIGVudmlyb25tZW50OgogICAgICAtIERPQ0tFUl9IT1NUPXRjcDovLzEyNy4wLjAuMToyMzc1CiAgICBjb21tYW5kczoKICAgICAgLSBkb2NrZXIgbG9naW4gLXU9cHR0Zy1mcy1yb2JvdCAtcD0ke0RPQ0tFUl9QQVNTV09SRH0gZG9ja2VyLmRpZ2l0YWwuaG9tZW9mZmljZS5nb3YudWsKICAgICAgLSBkb2NrZXIgdGFnIHB0dGctZnMtc2VydmljZSBkb2NrZXIuZGlnaXRhbC5ob21lb2ZmaWNlLmdvdi51ay9wdHRnL3B0dGctZnMtc2VydmljZToke0RST05FX1RBR30KICAgICAgLSBkb2NrZXIgcHVzaCBkb2NrZXIuZGlnaXRhbC5ob21lb2ZmaWNlLmdvdi51ay9wdHRnL3B0dGctZnMtc2VydmljZToke0RST05FX1RBR30KICAgIHdoZW46CiAgICAgIGV2ZW50OiB0YWcKCiAgZ2V0LWt1YmUtY29uZmlndXJhdGlvbjoKICAgIGltYWdlOiBwbHVnaW5zL2dpdAogICAgZW52aXJvbm1lbnQ6CiAgICAgIC0gRE9DS0VSX0hPU1Q9dGNwOi8vMTI3LjAuMC4xOjIzNzUKICAgIGNvbW1hbmRzOgogICAgICAtIGdpdCBjbG9uZSBodHRwczovL2dpdGxhYi5kaWdpdGFsLmhvbWVvZmZpY2UuZ292LnVrL3B0dGcva3ViZS1wdHRnLWZzLXNlcnZpY2UuZ2l0CiAgICB3aGVuOgogICAgICBldmVudDogW3B1c2gsIHRhZywgZGVwbG95bWVudF0KCiAgZGVwbG95LXRvLWRldi1mcm9tLWJ1aWxkLW51bWJlcjoKICAgIGltYWdlOiBxdWF5LmlvL3VraG9tZW9mZmljZWRpZ2l0YWwva2Q6djAuMi4yCiAgICBlbnZpcm9ubWVudDoKICAgICAgLSBET0NLRVJfSE9TVD10Y3A6Ly8xMjcuMC4wLjE6MjM3NQogICAgICAtIEtVQkVfTkFNRVNQQUNFPXB0LWktZGV2CiAgICAgIC0gRU5WSVJPTk1FTlQ9ZGV2CiAgICAgIC0gVkVSU0lPTj1idWlsZC0ke0RST05FX0JVSUxEX05VTUJFUn0KICAgICAgLSBLVUJFX1NFUlZFUj1odHRwczovL2t1YmUtZGV2LmRzcC5ub3Rwcm9kLmhvbWVvZmZpY2UuZ292LnVrCiAgICBjb21tYW5kczoKICAgICAgLSBjZCBrdWJlLXB0dGctZnMtc2VydmljZQogICAgICAtIC4vZGVwbG95LnNoCiAgICB3aGVuOgogICAgICBicmFuY2g6IFttYXN0ZXJdCiAgICAgIGV2ZW50OiBbcHVzaCwgdGFnXQoKICBkZXBsb3ktdG8tcHJlcHJvZC1mcm9tLWJ1aWxkLXRhZzoKICAgIGltYWdlOiBxdWF5LmlvL3VraG9tZW9mZmljZWRpZ2l0YWwva2Q6djAuMi4yCiAgICBlbnZpcm9ubWVudDoKICAgICAgLSBET0NLRVJfSE9TVD10Y3A6Ly8xMjcuMC4wLjE6MjM3NQogICAgICAtIEtVQkVfTkFNRVNQQUNFPXB0LWktcHJlcHJvZAogICAgICAtIEVOVklST05NRU5UPXByZXByb2QKICAgICAgLSBWRVJTSU9OPSR7RFJPTkVfVEFHfQogICAgICAtIEtVQkVfU0VSVkVSPWh0dHBzOi8va3ViZS1kZXYuZHNwLm5vdHByb2QuaG9tZW9mZmljZS5nb3YudWsKICAgIGNvbW1hbmRzOgogICAgICAtIGNkIGt1YmUtcHR0Zy1mcy1zZXJ2aWNlCiAgICAgIC0gLi9kZXBsb3kuc2gKICAgIHdoZW46CiAgICAgIGV2ZW50OiBbdGFnXQoKICBkZXBsb3k6CiAgICBpbWFnZTogcXVheS5pby91a2hvbWVvZmZpY2VkaWdpdGFsL2tkOnYwLjIuMgogICAgZW52aXJvbm1lbnQ6CiAgICAgIC0gRE9DS0VSX0hPU1Q9dGNwOi8vMTI3LjAuMC4xOjIzNzUKICAgICAgLSBLVUJFX05BTUVTUEFDRT1wdC1pLSR7RFJPTkVfREVQTE9ZX1RPfQogICAgICAtIEVOVklST05NRU5UPSR7RFJPTkVfREVQTE9ZX1RPfQogICAgICAtIFZFUlNJT049JHtJTUFHRV9WRVJTSU9OfQogICAgICAtIEtVQkVfU0VSVkVSPWh0dHBzOi8va3ViZS1kZXYuZHNwLm5vdHByb2QuaG9tZW9mZmljZS5nb3YudWsKICAgIGNvbW1hbmRzOgogICAgICAtIGNkIGt1YmUtcHR0Zy1mcy1zZXJ2aWNlCiAgICAgIC0gLi9kZXBsb3kuc2gKICAgIHdoZW46CiAgICAgIGV2ZW50OiBkZXBsb3ltZW50CiAgICAgIGVudmlyb25tZW50OiBbZGV2LCB0ZXN0LCBwcmVwcm9kXQoKICBkZXBsb3ktdG8tcHJvZDoKICAgIGltYWdlOiBxdWF5LmlvL3VraG9tZW9mZmljZWRpZ2l0YWwva2Q6djAuMi4yCiAgICBlbnZpcm9ubWVudDoKICAgICAgLSBET0NLRVJfSE9TVD10Y3A6Ly8xMjcuMC4wLjE6MjM3NQogICAgICAtIEtVQkVfTkFNRVNQQUNFPXB0LWktcHJvZAogICAgICAtIEVOVklST05NRU5UPXByb2QKICAgICAgLSBWRVJTSU9OPSR7SU1BR0VfVkVSU0lPTn0KICAgICAgLSBLVUJFX1NFUlZFUj1odHRwczovL2t1YmUuZHNwLmRpZ2l0YWwuaG9tZW9mZmljZS5nb3YudWsKICAgIGNvbW1hbmRzOgogICAgICAtIGNkIGt1YmUtcHR0Zy1mcy1zZXJ2aWNlCiAgICAgIC0gLi9kZXBsb3kuc2gKICAgIHdoZW46CiAgICAgIGV2ZW50OiBkZXBsb3ltZW50CiAgICAgIGVudmlyb25tZW50OiBwcm9kCgpzZXJ2aWNlczoKICBkaW5kOgogICAgaW1hZ2U6IGRvY2tlcjoxLjExLWRpbmQKICAgIHByaXZpbGVnZWQ6IHRydWUKICAgIGNvbW1hbmQ6CiAgICAgIC0gIi1zIgogICAgICAtICJvdmVybGF5Ig.h5VOBBjvdjQQDaFUURHeIPE8WCTIegfHjj00j2BaQZk